name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ steps.result.outcome }}
    steps:
      - name: clonar repositorios
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: instalar dependencias
        run: |
          python -m pip install --upgrade pip 
          pip install -r requirements.txt

      - name: ejecutar test
        run: pytest

      - name: ejecutar con flake8
        run: flake8 . || true

      - name: Notificar a Slack 
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            mensaje="âœ… *CI EXITOSO* en \`${{ github.repository }}\` (rama \`${{ github.ref_name }}\`)"
          else
            mensaje="ðŸš¨ *CI FALLÃ“* en \`${{ github.repository }}\` (rama \`${{ github.ref_name }}\`)"
          fi
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"${mensaje}\"}" \
          "${{ vars.SLACK_WEBHOOK_URL }}"


  sonarcloud:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - uses: actions/checkout@v3

      - name: AnÃ¡lisis con SonarCloud
        uses: SonarSource/sonarqube-scan-action@v2.0.1
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
      - name: Notificar a Slack
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            mensaje="âœ… *AnÃ¡lisis SonarCloud exitoso* en \`${{ github.repository }}\` (rama \`${{ github.ref_name }}\`)"
          else
            mensaje="ðŸš¨ *Fallo en anÃ¡lisis SonarCloud* en \`${{ github.repository }}\` (rama \`${{ github.ref_name }}\`)"
          fi

          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"${mensaje}\nðŸ”— Ver: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}" \
          "${{ vars.SLACK_WEBHOOK_URL }}"
        
        

  deploy:
    runs-on: ubuntu-latest
    needs: sonarcloud
    if: success()
    steps:
      - name: Desplegar en Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
      - name: Notificar a Slack
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            mensaje="âœ… *Despliegue exitoso en Render* de \`${{ github.repository }}\` (rama \`${{ github.ref_name }}\`)"
          else
            mensaje="ðŸš¨ *Fallo en el despliegue en Render* de \`${{ github.repository }}\` (rama \`${{ github.ref_name }}\`)"
          fi

          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"${mensaje}\nðŸ”— Ver: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}" \
          "${{ vars.SLACK_WEBHOOK_URL }}"
