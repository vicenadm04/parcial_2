name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: clonar repositorios
        uses: actions/checkout@v3
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: instalar dependecias
        run: |
          python -m pip install --upgrade pip 
          pip install -r requirements.txt
      - name: ejecutar test
        run: pytest
      - name: ejecutar con flake8
        run: flake8 .  || true
      - name: Notificar a Slack 
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            mensaje="âœ… *CI EXITOSO* en \`${{ github.repository }}\` (rama \`${{ github.ref_name }}\`)"
          else
            mensaje="ðŸš¨ *CI FALLÃ“* en \`${{ github.repository }}\` (rama \`${{ github.ref_name }}\`)"
          fi

          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"${mensaje}\nðŸ”— Ver: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}" \
          "${{ vars.SLACK_WEBHOOK_URL }}"
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Desplegar en Render
        if: success()
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}



    
